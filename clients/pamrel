#!/usr/bin/env python
import json
import urllib2
import os
import sys


server = "http://pamrel.lu"

en_help_str = "{0} [--theme=theme] [--numbers=on/off] <file>".format(sys.argv[0])
pastes = os.path.expanduser("~/.pamrel")

if __name__ == "__main__":
    if len(sys.argv) <= 1 or "-h" in sys.argv or "--help" in sys.argv:
        print(en_help_str)
        sys.exit()

    paste = sys.argv[-1]

    if paste.find(".") != -1:
        file_type = paste.split(".")[-1]
    else:
        file_type = None

    # check the file exists
    if not os.path.isfile(pastes):
        f = open(pastes, "w")
        f.close()

    theme = None
    numbers = False
    delete = False
    for arg in sys.argv:
        if arg.startswith("--theme="):
            theme = arg.split("=", 1)[1]
        elif arg.startswith("--numbers="):
            numbers = arg.split("=", 1)[1]
            if numbers not in ["on", "off"]:
                print "Unknown --numbers={0}".format(numbers)
                sys.exit()
            numbers = True if numbers == "on" else False
        elif arg.startswith("--delete="):
            delete = arg.split("=", 1)[1]
            if delete.startswith(server):
                delete = delete.split("/")[-1]
    if delete:
        objects = json.loads(open(pastes).read())
        if delete in objects.keys():
            token = objects[delete]["deleteToken"]
            pamreltu = urllib2.build_opener(urllib2.HTTPHandler)
            request = urllib2.Request("{0}/{1}".format(server, id), data=token)
            request.get_method = lambda: "DELETE"
            paste = json.loads(pamreltu.open(request).read())
            if "error" in paste:
                print "[ERROR] {0}".format(paste)
            else:
                print "Success!"
        else:
            print "No delete token {0}".format(delete)
        sys.exit()  

    context = {
        "verb": "post",
        "object": {
            "content": open(paste).read(),
            "fileExtension": file_type,
            "theme": theme,
            "numbers": numbers,
        }
    }

    pamreltu = urllib2.build_opener(urllib2.HTTPHandler)
    request = urllib2.Request(server, data=json.dumps(context))
    request.add_header("Content-Type", "application/json")
    request.get_method = lambda: "POST"
    paste = json.loads(pamreltu.open(request).read())

    if "error" in paste:
        print("[Error] {0}".format(paste["error"]))

    # save delete token
    f = open(pastes, "r")
    try:
        objects = json.loads(f.read())
    except ValueError:
        objects = dict()
    f.close()
    objects[paste["object"]["id"]] = paste["object"].copy()
    # for space saving remove the content
    del objects[paste["object"]["id"]]["content"]
    f = open(pastes, "w")
    f.write(json.dumps(objects, sort_keys=True, indent=4, separators=(',', ': ')))
    f.close()

    url = "{server}/{pid}".format(server=server, pid=paste["object"]["id"])

    if "-o" in sys.argv:
        # open in browser
        import webbrowser
        webbrowser.open(url)
        sys.exit()

    print(url)
